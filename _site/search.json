[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rで機械学習！",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Chapter",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "chapter.html",
    "href": "chapter.html",
    "title": "Chapter",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "contents.html",
    "href": "contents.html",
    "title": "内容",
    "section": "",
    "text": "Text text text text text text text text text text text.\nText text text text text text text text text text text text text text."
  },
  {
    "objectID": "contents.html#list-2",
    "href": "contents.html#list-2",
    "title": "内容",
    "section": "list 2",
    "text": "list 2\n\ncode 2"
  },
  {
    "objectID": "contents.html#list-1",
    "href": "contents.html#list-1",
    "title": "内容",
    "section": "list 1",
    "text": "list 1\n\ncode 1"
  },
  {
    "objectID": "contents.html#list-4-1-1",
    "href": "contents.html#list-4-1-1",
    "title": "内容",
    "section": "list 4-1-(1)",
    "text": "list 4-1-(1)\n\n# Python\nimport numpy as np\n\n\n# R\nNULL"
  },
  {
    "objectID": "contents.html#リスト-4-1-1",
    "href": "contents.html#リスト-4-1-1",
    "title": "内容",
    "section": "リスト 4-1-(1)",
    "text": "リスト 4-1-(1)\n\n# Python\nimport numpy as np\n\n\n# R\nNULL\n\nNumpyのインポートに対応するRのコードはない．{tidyverse}をインストールすれば良い．"
  },
  {
    "objectID": "contents.html#リスト-4-1-2",
    "href": "contents.html#リスト-4-1-2",
    "title": "内容",
    "section": "リスト 4-1-(2)",
    "text": "リスト 4-1-(2)\n\n# Python\na = np.array([2, 1])\nprint(a)\n\n\n# R\na &lt;- array(c(2, 1), dim = c(1, 2))\nprint(a)\n\n     [,1] [,2]\n[1,]    2    1\n\n\nnp.array()に対応するRのコードにはarray()がある．array(要素, dim = c(行数, 列数))のように指定すると配列が作成される．ちなみに，array()では要素が列に沿って配置されるため，行に沿って配置したい場合はmatrix()でbyrow引数を利用しなければならない．\n\narray(1:4, dim = c(2, 2))\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\nmatrix(1:4, ncol = 2, byrow = TRUE) |&gt;\n  as.array()\n\n     [,1] [,2]\n[1,]    1    2\n[2,]    3    4"
  },
  {
    "objectID": "contents.html#リスト-4-1-3",
    "href": "contents.html#リスト-4-1-3",
    "title": "内容",
    "section": "リスト 4-1-(3)",
    "text": "リスト 4-1-(3)\n\n# Python\ntype(a)\n\n\n# R\nclass(a)\n\n[1] \"matrix\" \"array\" \n\n\nデータ型を確認するにはclass()を用いたら良い．"
  },
  {
    "objectID": "contents.html#リスト-4-1-4",
    "href": "contents.html#リスト-4-1-4",
    "title": "内容",
    "section": "リスト 4-1-(4)",
    "text": "リスト 4-1-(4)\n\n# Python\nc = np.array([[1, 2], [3, 4]])\nprint(c)\n\n\n# R\nc &lt;- matrix(c(1, 2, 3, 4), nrow = 2, ncol = 2, byrow = TRUE) |&gt;\n  as.array()\nprint(c)\n\n     [,1] [,2]\n[1,]    1    2\n[2,]    3    4"
  },
  {
    "objectID": "contents.html#リスト-4-1-5",
    "href": "contents.html#リスト-4-1-5",
    "title": "内容",
    "section": "リスト 4-1-(5)",
    "text": "リスト 4-1-(5)\n\n# Python\nd = np.array([[1], [2]])\nprint(d)\n\n\n# R\nd &lt;- array(c(1, 2), dim = c(2, 1))\nprint(d)\n\n     [,1]\n[1,]    1\n[2,]    2"
  },
  {
    "objectID": "contents.html#リスト-4-1-6",
    "href": "contents.html#リスト-4-1-6",
    "title": "内容",
    "section": "リスト 4-1-(6)",
    "text": "リスト 4-1-(6)\n\n# Python\nprint(d.T)\nprint(d.T.T)\n\n\n# R\nprint(t(d))\n\n     [,1] [,2]\n[1,]    1    2\n\nprint(t(t(d)))\n\n     [,1]\n[1,]    1\n[2,]    2\n\n\n転置にはt()を用いる．"
  },
  {
    "objectID": "contents.html#リスト-4-1-7",
    "href": "contents.html#リスト-4-1-7",
    "title": "内容",
    "section": "リスト 4-1-(7)",
    "text": "リスト 4-1-(7)\n\n# Python\na = np.array([2, 1])\nb = np.array([1, 3])\nprint(a + b)\n\n\n# R\na &lt;- array(c(2, 1), dim = c(1, 2))\nb &lt;- array(c(1, 3), dim = c(1, 2))\nprint(a + b)\n\n     [,1] [,2]\n[1,]    3    4"
  },
  {
    "objectID": "contents.html#リスト-4-1-8",
    "href": "contents.html#リスト-4-1-8",
    "title": "内容",
    "section": "リスト 4-1-(8)",
    "text": "リスト 4-1-(8)\n\n# Python\na = np.array([2, 1])\nb = np.array([1, 3])\nprint(a + b)\n\n\n# R\na &lt;- array(c(2, 1), dim = c(1, 2))\nb &lt;- array(c(1, 3), dim = c(1, 2))\nprint(a - b)\n\n     [,1] [,2]\n[1,]    1   -2"
  },
  {
    "objectID": "contents.html#リスト-4-1-9",
    "href": "contents.html#リスト-4-1-9",
    "title": "内容",
    "section": "リスト 4-1-(9)",
    "text": "リスト 4-1-(9)\n\n# Python\n## print(2 * a)\n\n\nprint(2 * a)\n\n     [,1] [,2]\n[1,]    4    2"
  },
  {
    "objectID": "contents.html#リスト-4-1-10",
    "href": "contents.html#リスト-4-1-10",
    "title": "内容",
    "section": "リスト 4-1-(10)",
    "text": "リスト 4-1-(10)\n\n# Python\nb = np.array([1, 3])\nc = np.array([4, 2])\nprint(b @ c)\n\n\n# R\nb &lt;- array(c(1, 3), dim = c(1, 2))\nc &lt;- array(c(4, 2), dim = c(2, 1))\nprint(b %*% c)\n\n     [,1]\n[1,]   10\n\n\n行列の積は%*%を用いる．\n行列計算\\(\\mathbb{b} \\cdot \\mathbb{c}\\)では，行列\\(\\mathbb{b}\\)の列数と行列\\(\\mathbb{c}\\)の行数が一致する必要がある．Pythonでは，配列の行数(または列数)を指定していなくとも計算が可能であるが，Rではそうはいかない．そのため行列b, cの行数(または列数)を計算可能な数値に指定しなければならない．"
  },
  {
    "objectID": "contents.html#第1節",
    "href": "contents.html#第1節",
    "title": "内容",
    "section": "第1節",
    "text": "第1節\n\nリスト 4-1-(1)\n\n# Python\nimport numpy as np\n\n\n# R\nNULL\n\nNumpyのインポートに対応するRのコードはない．{tidyverse}をインストールすれば良い．\n\n\nリスト 4-1-(2)\n\n# Python\na = np.array([2, 1])\nprint(a)\n\n\n# R\na &lt;- array(c(2, 1), dim = c(1, 2))\nprint(a)\n\n     [,1] [,2]\n[1,]    2    1\n\n\nnp.array()に対応するRのコードにはarray()がある．array(要素, dim = c(行数, 列数))のように指定すると配列が作成される．ちなみに，array()では要素が列に沿って配置されるため，行に沿って配置したい場合はmatrix()でbyrow引数を利用しなければならない．\n\narray(1:4, dim = c(2, 2))\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\nmatrix(1:4, ncol = 2, byrow = TRUE) |&gt;\n  as.array()\n\n     [,1] [,2]\n[1,]    1    2\n[2,]    3    4\n\n\n\n\nリスト 4-1-(3)\n\n# Python\ntype(a)\n\n\n# R\nclass(a)\n\n[1] \"matrix\" \"array\" \n\n\nデータ型を確認するにはclass()を用いたら良い．\n\n\nリスト 4-1-(4)\n\n# Python\nc = np.array([[1, 2], [3, 4]])\nprint(c)\n\n\n# R\nc &lt;- matrix(c(1, 2, 3, 4), nrow = 2, ncol = 2, byrow = TRUE) |&gt;\n  as.array()\nprint(c)\n\n     [,1] [,2]\n[1,]    1    2\n[2,]    3    4\n\n\n\n\nリスト 4-1-(5)\n\n# Python\nd = np.array([[1], [2]])\nprint(d)\n\n\n# R\nd &lt;- array(c(1, 2), dim = c(2, 1))\nprint(d)\n\n     [,1]\n[1,]    1\n[2,]    2\n\n\n\n\nリスト 4-1-(6)\n\n# Python\nprint(d.T)\nprint(d.T.T)\n\n\n# R\nprint(t(d))\n\n     [,1] [,2]\n[1,]    1    2\n\nprint(t(t(d)))\n\n     [,1]\n[1,]    1\n[2,]    2\n\n\n転置にはt()を用いる．\n\n\nリスト 4-1-(7)\n\n# Python\na = np.array([2, 1])\nb = np.array([1, 3])\nprint(a + b)\n\n\n# R\na &lt;- array(c(2, 1), dim = c(1, 2))\nb &lt;- array(c(1, 3), dim = c(1, 2))\nprint(a + b)\n\n     [,1] [,2]\n[1,]    3    4\n\n\n\n\nリスト 4-1-(8)\n\n# Python\na = np.array([2, 1])\nb = np.array([1, 3])\nprint(a + b)\n\n\n# R\na &lt;- array(c(2, 1), dim = c(1, 2))\nb &lt;- array(c(1, 3), dim = c(1, 2))\nprint(a - b)\n\n     [,1] [,2]\n[1,]    1   -2\n\n\n\n\nリスト 4-1-(9)\n\n# Python\n## print(2 * a)\n\n\nprint(2 * a)\n\n     [,1] [,2]\n[1,]    4    2\n\n\n\n\nリスト 4-1-(10)\n\n# Python\nb = np.array([1, 3])\nc = np.array([4, 2])\nprint(b @ c)\n\n\n# R\nb &lt;- array(c(1, 3), dim = c(1, 2))\nc &lt;- array(c(4, 2), dim = c(2, 1))\nprint(b %*% c)\n\n     [,1]\n[1,]   10\n\n\n行列の積は%*%を用いる．\n行列計算\\(\\mathbb{b} \\cdot \\mathbb{c}\\)では，行列\\(\\mathbb{b}\\)の列数と行列\\(\\mathbb{c}\\)の行数が一致する必要がある．Pythonでは，g行列の行数(または列数)を指定していなくとも計算が可能であるが，Rではそうはいかない．そのため行列b, cの行数(または列数)を計算可能な数値に指定しなければならない．\n\n\nリスト 4-1-(11)\n\n# Python\na = np.array([1, 3])\nprint(np.linalg.norm(a))\n\n\n# R\na &lt;- array(c(1, 3), dim = c(1, 2))\nprint(norm(a, '2'))\n\n[1] 3.162278\n\n\nノルムはnorm()で計算可能である．"
  },
  {
    "objectID": "contents.html#第2節",
    "href": "contents.html#第2節",
    "title": "内容",
    "section": "第2節",
    "text": "第2節\n\nリセット\n\n# Python\n%reset\n\n\n# R\nrm(list = ls(all.names = TRUE))\n\n環境のリセットはrm(list = ls())でできる．今回はすべてをリセットするためにall.names引数にTRUEを指定している．\n\n\nリスト 4-2-(1)\n\n# Python\na = np.ones(1000)       # [1 1 1 ...     1]\nb = np.arange(1, 1001)  # [1 2 3 ...  1000]\nprint(a @ b)\n\n\n# R\na &lt;- array(rep(1, times = 1000), dim = c(1, 1000))\nb &lt;- array(seq(1:1000), dim = c(1000, 1))\nprint(a %*% b)\n\n       [,1]\n[1,] 500500"
  }
]